package classes;

import java.util.*;

import classes.*;

public class Main 
{

	public static void main(String[] args) 
	{
		// TODO Auto-generated method stub
		startAC();
		
	}
	
	private static void startAC() 
	{
		Scanner scn = new Scanner(System.in);
		Random r = new Random();
		
		int interactions = 0;
		int[][] acInicial = new int[100][100];
		
		//System.out.print("Quantas Interações: ");
		//interactions = scn.nextInt();
		//scn.close();
		
		for(int i=0;i<10;i++) {
			acInicial[0][i] = r.nextInt(2);
		}
		
		acInicial = executeRules(93, acInicial, 10, 2);
		
		
	}
	
	private static void createPanel() {
		
	}
	
	private static void printAC()
	{
		
	}
	
	public int[][] executeRules (int ruleNumber, int[][] ac, int acSize, int interactions ) {
		System.out.println("RuleNumber: "+ruleNumber);
		if (ruleNumber==50) {
			for(int j=1;j<interactions;j++) {
				for(int i = 0; i < acSize; i++ ) {
					if(i==0) {
						ac[j+1][i] = rule50(ac[j][acSize-1], ac[j][i], ac[j][i+1]);
					}else if(i==acSize-1) {
						ac[j+1][i] = rule50(ac[j][i-1], ac[j][i], ac[j][0]);
					}
					else{
						ac[j+1][i] = rule50(ac[j][i-1], ac[j][i], ac[j][i+1]);
					}
				}
			}
		}
		else if(ruleNumber==93) {
			System.out.print("Regra 93");
			for(int j=1;j<interactions;j++) {
				for(int i = 0; i < acSize; i++ ) {
					if(i==0) {
						ac[j+1][i] = rule93(ac[j][acSize-1], ac[j][i], ac[j][i+1]);
						System.out.println("ac inicio: "+ac[j+1][i]);
					}else if(i==acSize-1) {
						ac[j+1][i] = rule93(ac[j][i-1], ac[j][i], ac[j][0]);
						System.out.println("ac fim: "+ac[j+1][i]);
					}
					else{
						ac[j+1][i] = rule93(ac[j][i-1], ac[j][i], ac[j][i+1]);
						System.out.println("ac meio: "+ac[j+1][i]);
					}
				}
			}
		}
		else if(ruleNumber==226) {
			for(int j=1;j<interactions;j++) {
				for(int i = 0; i < acSize; i++ ) {
					if(i==0) {
						ac[j+1][i] = rule226(ac[j][acSize-1], ac[j][i], ac[j][i+1]);
					}else if(i==acSize-1) {
						ac[j+1][i] = rule226(ac[j][i-1], ac[j][i], ac[j][0]);
					}
					else{
						ac[j+1][i] = rule226(ac[j][i-1], ac[j][i], ac[j][i+1]);
					}
				}
			}
		}
		
		for (int i = 0; i<interactions; i++) {
			for(int j = 0; j<acSize;j++) {
				System.out.print(ac[i][j]+" ");
			}
			System.out.print("\n");
		}
		return ac;
	}
	
	private int rule93 (int left, int mid, int right) {
		//Position 7, 5 and 1 returns 0
		if(	(left==1 && mid==1 && right == 1) ||
		    (left==1 && mid==0 && right == 1) ||
		    (left==0 && mid==0 && right == 1)) {
			return 0;
		}
		// Position 6, 4, 3, 2 and 0 returns 1
		return 1;
	}
	
	private int rule50 (int left, int mid, int right) {
		//Position 7, 6, 3, 2 and 0 returns 0
		if(	(left==1 && mid==1 && right == 1) ||
		    (left==1 && mid==1 && right == 0) ||
		    (left==0 && mid==1 && right == 1) ||
		    (left==0 && mid==1 && right == 0) ||
		    (left==0 && mid==0 && right == 0) ) {
			return 0;
		}
		// Position 6, 4, 3, 2 and 0 returns 1
		return 1;
	}
	
	private int rule226(int left, int mid, int right) {
		//Position 4, 3, 2 and 0 returns 0
		if(	(left==1 && mid==0 && right == 0) ||
		    (left==0 && mid==1 && right == 1) ||
		    (left==0 && mid==1 && right == 0) ||
		    (left==0 && mid==0 && right == 0) ) {
			return 0;
		}
		// Position 7, 6, 5 and 1 returns 1
		return 1;
	}
}
